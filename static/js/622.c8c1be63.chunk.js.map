{"version":3,"file":"static/js/622.c8c1be63.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/Filter/Filter.styled.js","modules/Filter/Filter.jsx","modules/ContactForm/initialState.js","modules/ContactForm/fields.js","modules/ContactForm/ContactForm.styled.js","modules/ContactForm/ContactForm.jsx","shared/components/Buttons/ButtonClick.jsx","shared/components/ContactItem/ContactItem.styled.js","shared/components/ContactItem/ContactItem.jsx","modules/ContactList/ContactList.styled.js","modules/ContactList/ContactList.jsx","modules/PhoneBook/PhoneBook.staled.js","modules/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage/PhoneBookPage.jsx","redux/auth/auth-selrctor.js","shared/components/Buttons/Button.styled.js","shared/components/Buttons/ButtonSubmit.jsx","shared/components/Section/Section.styled.js","shared/components/Section/Section.jsx","shared/components/Spinner/Spinner.styled.js","shared/components/Spinner/Spinner.jsx","shared/components/TextField/TextField.styled.js","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const getFilterContacts = ({ contacts: {contacts}, filter }) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getIsLoading = ({contacts}) => contacts.loading;\nexport const getError = ({contacts}) => contacts.error;\n","export const getFilter = store => store.filter;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n  background-color: #ffe0bd;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport PropTypes from 'prop-types';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = ({ text }) => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const findByName = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const onBlur = () => dispatch(setFilter(''));\n\n  return (\n    <Label>\n      {text}\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        value={filter}\n        onChange={findByName}\n        onBlur={onBlur}\n      ></Input>\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    label: 'Name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    placeholder: 'Name',\n    required: true,\n  },\n\n  number: {\n    type: 'tel',\n    name: 'number',\n    label: 'Number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    placeholder: 'Number',\n    required: true,\n  },\n};\n\nexport default fields;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n  background-color: #ffe0bd;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n\nexport const Form = styled.form`\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 360px;\n  padding-right: 30px;\n  padding-left: 30px;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  border-radius: 30px;\n  background-color: #153e49;\n`;\n","import { useDispatch } from 'react-redux';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport TextField from 'shared/components/TextField/TextField';\nimport fields from './fields';\nimport ButtonSubmit from 'shared/components/Buttons/ButtonSubmit';\nimport { Form } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(fetchAddContact(data));\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, number } = state;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={number} handleChange={handleChange} {...fields.number} />\n      <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { DeleteBtn } from './Button.styled.js';\n\nconst ButtonClick = ({ children, type, onClick }) => {\n  return (\n    <DeleteBtn onClick={onClick} type={type}>\n      {children}\n    </DeleteBtn>\n  );\n};\n\nexport default ButtonClick;\n\nButtonClick.propTypes = {\n  children: PropTypes.element.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']),\n  onClick: PropTypes.func,\n};\n\nButtonClick.defaultProps = {\n  type: 'button',\n};\n","import styled from 'styled-components';\n\nexport const Name = styled.p`\n  font-size: 18px;\n  margin-top: 2px;\n  margin-bottom: 5px;\n`;\n\nexport const Number = styled.p`\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\nimport ButtonClick from '../Buttons/ButtonClick';\nimport { Name, Number } from './ContactItem.styled';\nimport { ImUserMinus } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <>\n      <div>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </div>\n      <div>\n        <ButtonClick type=\"button\" onClick={() => onDeleteContact(id)}>\n          <IconContext.Provider value={{ color: '#fff', size: '20px' }}>\n            <ImUserMinus />\n          </IconContext.Provider>\n        </ButtonClick>\n      </div>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 300px;\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const List = styled.ul`\n  color: #fff;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\nimport { getFilterContacts } from 'redux/contacts/contacts-selectors';\nimport ContactItem from 'shared/components/ContactItem/ContactItem';\nimport { Item, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilterContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const elements = contacts.map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <ContactItem\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n          id={id}\n        />\n      </Item>\n    );\n  });\n\n  return <>{contacts.length > 0 && <List>{elements}</List>};</>;\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  padding: 40px 30px;\n  max-width: 360px;\n  min-height: 386px;\n  background-color: #b2101e;\n  border-radius: 30px;\n`;\n\nexport const ManeBox = styled.div`\n  padding-top: 20px;\n  padding-bottom: 60px;\n  background-color: #051e1e;\n  width: 100vw;\n`;\n","import { useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/contacts/contacts-selectors';\nimport Section from 'shared/components/Section/Section';\nimport Filter from 'modules/Filter/Filter';\nimport ContactForm from 'modules/ContactForm/ContactForm';\nimport ContactList from 'modules/ContactList/ContactList';\nimport Spinner from 'shared/components/Spinner/Spinner';\nimport { Box, ManeBox } from './PhoneBook.staled';\n\nconst PhoneBook = () => {\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <ManeBox>\n      {loading && !error && <Spinner />}\n      <Section title=\"Phone Book\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Box>\n          <Filter text=\"Find contacts by name\" />\n          <ContactList />\n        </Box>\n      </Section>\n    </ManeBox>\n  );\n};\n\nexport default PhoneBook;\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { isUserLogin } from 'redux/auth/auth-selrctor';\nimport PhoneBook from 'modules/PhoneBook/PhoneBook';\n\nconst PhoneBookPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  if (!isLogin) {\n    return <Navigate to=\"/\" />;\n  }\n  return <PhoneBook />;\n};\n\nexport default PhoneBookPage;\n","export const isUserLogin = ({ auth }) => auth.isLogin;\nexport const getUser = ({ auth }) => auth.user;\n","import styled from 'styled-components';\n\nexport const BtnSubmit = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 150px;\n  height: 50px;\n  padding: 0;\n  font-size: 16px;\n  background-color: #1d2127;\n  border: 0;\n  border-radius: 30px;\n  color: white;\n  cursor: pointer;\n  transition: hover 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #b2101e;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n  height: 50px;\n  width: 50px;\n  border-radius: 30px;\n  border: 0;\n  background-color: #1d2127;\n\n  &:hover {\n    background-color: #153e49;\n  }\n`;\n\nexport const BtnLogout = styled(BtnSubmit)`\n  margin: 0;\n  color: rgb(255, 224, 189);\n`;\n","import PropTypes from 'prop-types';\nimport { BtnSubmit } from './Button.styled.js';\n\nconst ButtonSubmit = ({ children, type, onSubmit }) => {\n  return (\n    <BtnSubmit onSubmit={onSubmit} type={type}>\n      {children}\n    </BtnSubmit>\n  );\n};\n\nexport default ButtonSubmit;\n\nButtonSubmit.propTypes = {\n  children: PropTypes.elementType.isRequired,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']).isRequired,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ManeSection = styled.section`\n  width: 100vw;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 20px;\n  margin: auto;\n  border: none;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-bottom: 40px;\n  padding-top: 20px;\n  text-align: center;\n  color: #ffe0bd;\n`;\n","import PropTypes from 'prop-types';\nimport { ManeSection, Title } from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <ManeSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </ManeSection>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import styled from 'styled-components';\n\nexport const SpinnerBox = styled.div`\ndisplay: flex;\njustify-content: center;\n`","import { ColorRing } from 'react-loader-spinner';\nimport { SpinnerBox } from './Spinner.styled';\n\nconst Spinner = () => {\n    return (\n        <SpinnerBox>\n            <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n        </SpinnerBox>\n        \n    )\n};\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  font-size: 16px;\n  font-weight: 500;\n  color: #051e1e;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 6px 20px;\n  border-radius: 30px;\n  border: 0;\n  height: 50px;\n  width: 100%;\n  outline: none;\n  background-color: #ffe0bd;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 400;\n  color: #fff;\n`;\n","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Input, Label } from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  props: PropTypes.any,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["getFilterContacts","contacts","filter","normalizedFilter","toLowerCase","contact","name","includes","getIsLoading","loading","getError","error","getFilter","store","Input","styled","Label","text","useSelector","dispatch","useDispatch","type","placeholder","value","onChange","e","setFilter","currentTarget","onBlur","number","label","pattern","title","required","Form","useForm","initialState","onSubmit","data","fetchAddContact","state","handleChange","handleSubmit","TextField","fields","ButtonSubmit","ButtonClick","children","onClick","defaultProps","Name","Number","id","onDeleteContact","color","size","Item","List","useEffect","fetchContacts","fetchDeleteContact","elements","map","length","Box","ManeBox","Spinner","Section","isUserLogin","to","auth","isLogin","getUser","user","BtnSubmit","DeleteBtn","BtnLogout","ManeSection","Title","SpinnerBox","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","props","useMemo","nanoid","htmlFor","useState","setState","target","prevState","checked","newValue","preventDefault"],"sourceRoot":""}